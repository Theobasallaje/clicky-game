{"version":3,"sources":["components/Nav/Nav.js","components/Images/Images.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","Fragment","className","id","score","topScore","Images","imageArray","map","image","clicked","key","onClick","handleClick","src","App","state","console","log","concat","_this","setState","Object","toConsumableArray","components_Nav_Nav","this","components_Images_Images","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"6OAyBeA,SAtBH,SAACC,GACT,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACXJ,EAAAC,EAAAC,cAAA,QAAMG,GAAG,SAAT,eACAL,EAAAC,EAAAC,cAAA,QAAMG,GAAG,UAETL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMG,GAAG,SAAT,UAAyBN,EAAMO,OAAaN,EAAAC,EAAAC,cAAA,QAAMG,GAAG,YAAT,cAAgCN,EAAMQ,YAI1FP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBCQZI,eArBA,SAACT,GACZ,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKG,GAAG,gBACRL,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAb,2CAEAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACVL,EAAMU,WAAWC,IAAI,SAAAC,GAAK,OACvBX,EAAAC,EAAAC,cAAA,OAAKU,SAAS,EAAOC,IAAKF,EAAOG,QAAS,WACtCf,EAAMgB,YAAYJ,IAElBK,IAAKL,UC2CVM,6MApDbC,MAAM,CACJZ,MAAO,EACPC,SAAU,EAKVE,WAAY,CAAC,uDACD,gJACA,8HACA,sCACA,uHACA,oHACA,8EACA,4GACA,iIACA,iHACA,6EACA,8DACZG,QAAS,MAGXG,YAAc,SAACJ,EAAOC,GACpBO,QAAQC,IAAR,eAAAC,OAA2BV,IAC3BW,EAAKC,SAAS,CACZX,QAAO,GAAAS,OAAAG,OAAAC,EAAA,EAAAD,CAAMF,EAAKJ,MAAMN,SAAjB,CAA0BD,MAEnCQ,QAAQC,IAAR,kBAAAC,OAA8BT,6EAU9B,OACEZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACwB,EAAD,CACApB,MAAOqB,KAAKT,MAAMZ,MAClBC,SAAUoB,KAAKT,MAAMX,WAErBP,EAAAC,EAAAC,cAAC0B,EAAD,CACEnB,WAAYkB,KAAKT,MAAMT,WACvBM,YAAaY,KAAKZ,sBA9CVc,aCDlBC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9f105337.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css'\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <>\r\n        <div className=\"navbar navbar-expand-lg\">\r\n            <span id=\"title\">Clicky Game</span>\r\n            <span id=\"guess\"></span>\r\n            {/* <span>Score: {props.score + \",\" + props.topScore}</span> */}\r\n            <div>\r\n                <span id=\"score\">Score: {props.score}</span><span id=\"topScore\">Top Score: {props.topScore}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                {/* <h1 className=\"display-4\">Choose a Character</h1>\r\n                <p className=\"lead\">but don't click on any more than once!</p> */}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './index.css'\r\n\r\nconst Images = (props) => {\r\n    return (\r\n        <>\r\n        <div id=\"instructions\">\r\n        <h1>Choose a Character</h1>\r\n        <p className=\"lead\">but don't click on any more than once!</p>\r\n        </div>\r\n        <div className=\"images\">\r\n            {props.imageArray.map(image => (\r\n                <img clicked={false} key={image} onClick={() => {\r\n                    props.handleClick(image)\r\n                }}\r\n                    src={image} />\r\n            )\r\n            )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Images;","import React, { Component } from 'react';\nimport Nav from './components/Nav/'\nimport './style.css';\nimport Images from './components/Images';\n\nclass App extends Component {\n  state={\n    score: 0,\n    topScore: 0,\n    // Random images array\n    // imageArray: [\"https://picsum.photos/id/237/170/170\",\"https://picsum.photos/id/238/170/170\",\"https://picsum.photos/id/239/170/170\",\"https://picsum.photos/id/240/170/170\",\"https://picsum.photos/id/241/170/170\",\"https://picsum.photos/id/242/170/170\",\"https://picsum.photos/id/243/170/170\",\"https://picsum.photos/id/244/170/170\",\"https://picsum.photos/id/245/170/170\",\"https://picsum.photos/id/246/170/170\",\"https://picsum.photos/id/247/170/170\",\"https://picsum.photos/id/248/170/170\"],\n    \n    // Had to resize images in css\n    imageArray: [\"https://media.giphy.com/media/VXJWhaO7afRe/giphy.gif\", // Saitama \n                \"https://vignette.wikia.nocookie.net/onepunchman/images/6/69/Genos_profile_anime.png/revision/latest/scale-to-width-down/310?cb=20161002155041\", // Genos\n                \"https://vignette.wikia.nocookie.net/onepunchman/images/3/37/License-lessRiderAnimeAvi.png/revision/latest?cb=20160207195325\", // Mumen Rider \n                \"https://i.redd.it/dbngi0djlq521.png\", // Speed-o'-Sound Sonic\n                \"https://vignette.wikia.nocookie.net/onepunchman/images/8/81/Atomic_Samurai_Avi.png/revision/latest?cb=20151227200044\", // Atomic Samurai \n                \"https://vignette.wikia.nocookie.net/onepunchman/images/2/28/ChildEmperorAvi.png/revision/latest?cb=20151227201758\", // Child Emperor\n                \"http://www.anime-evo.net/wp-content/uploads/2015/12/One-Punch-Man-11-17.jpg\", // Lord Boros \n                \"https://vignette.wikia.nocookie.net/onepunchman/images/3/34/BangAvi.png/revision/latest?cb=20151227193132\", // Silver Fang \n                \"https://vignette.wikia.nocookie.net/onepunchman/images/8/8e/Deep_Sea_King_Anime_Portrait.png/revision/latest?cb=20151124210322\", // Deep Sea King \n                \"https://vignette.wikia.nocookie.net/onepunchman/images/d/d5/Drive_Knight.png/revision/latest?cb=20151221135032\", // Drive Knight \n                \"http://vignette4.wikia.nocookie.net/onepunchman/images/2/2c/BofoyAnime.png\", // Metal Knight\n                \"https://medias.spotern.com/spots/w640/68600-1532336916.jpg\"], // Tatsumaki (Tornado of Terror)\n    clicked: []\n  }\n\n  handleClick = (image, clicked) => {\n    console.log(`You Clicked ${image}`);\n    this.setState({\n      clicked: [...this.state.clicked, image]\n    })\n    console.log(`Clicked Array: ${clicked}`);\n    //if current image we click is in clicked array = true\n    //reset score to 0 and shuffle array and reset game\n    //else\n    //push into clicked array, update score by 1 and compare with topscore and update if needed, shuffle array\n    //can shuffle iamges after if else since we do it either way\n    //can make a handleShuffle method if needed\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav \n        score={this.state.score}\n        topScore={this.state.topScore}\n        />\n        <Images\n          imageArray={this.state.imageArray}\n          handleClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}